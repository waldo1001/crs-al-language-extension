{
    "Snippet (waldo): Enable Assisted Setup (<15.0) ": {
        "description": "Snippet (waldo): Enable Assisted Setup (<15.0)",
        "prefix": "tassistedsetupwaldoBeforeV15",
        "body": [
            "[EventSubscriber(ObjectType::Table, Database::\"Aggregated Assisted Setup\", 'OnRegisterAssistedSetup', '', false, false)]",
            "local procedure AddExtensionAssistedSetup_OnRegisterAssistedSetup(var TempAggregatedAssistedSetup: Record \"Aggregated Assisted Setup\" TEMPORARY)",
            "var",
            "\t${2:AssistedSetupRecord}: Record ${1:\"TableName\"};",
            "begin",
            "\tTempAggregatedAssistedSetup.AddExtensionAssistedSetup(Page::${3:\"PageName\"},",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t'${3:Text in Assisted Setup List}',",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\tTrue,",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t${2:AssistedSetupRecord}.RecordId(),",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\tGetAssistedSetupStatus(TempAggregatedAssistedSetup),",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t'');",
            "end;",
            "[EventSubscriber(ObjectType::Table, Database::\"Aggregated Assisted Setup\", 'OnUpdateAssistedSetupStatus', '', false, false)]",
            "local procedure AggregatedAssistedSetup_OnUpdateAssistedSetupStatus(var TempAggregatedAssistedSetup: Record \"Aggregated Assisted Setup\" TEMPORARY)",
            "begin",
            "\tTempAggregatedAssistedSetup.SetStatus(TempAggregatedAssistedSetup, PAGE::${3:\"PageName\"}, GetAssistedSetupStatus(TempAggregatedAssistedSetup));",
            "end;",
            "local procedure GetAssistedSetupStatus(AggregatedAssistedSetup: Record \"Aggregated Assisted Setup\"): Integer",
            "var",
            "\t${2:AssistedSetupRecord}: Record ${1:\"TableName\"};",
            "begin",
            "\tWITH AggregatedAssistedSetup DO BEGIN",
            "\t\tIF ${2:AssistedSetupRecord}.Get() THEN",
            "\t\t\tStatus := Status::Completed",
            "\t\tELSE",
            "\t\t\tStatus := Status::\"Not Completed\";",
            "\t\tEXIT(Status);",
            "\tEND;",
            "end;"
        ]
    },
    "Snippet (waldo): Enable Assisted Setup (>=15.0) ": {
        "description": "Snippet (waldo): Enable Assisted Setup (>=15.0)",
        "prefix": "tassistedsetupwaldoBeforeV18",
        "body": [
            "codeunit ${1:id} \"${2:Name} Meth\"",
            "{",
            "\t[EventSubscriber(ObjectType::Codeunit, Codeunit::\"Assisted Setup\", 'OnRegister', '', false, false)]",
            "\tlocal procedure AddExtensionAssistedSetup_OnRegisterAssistedSetup()",
            "\tvar",
            "\t\tAssistedSetup: Codeunit \"Assisted Setup\";",
            "\t\tCurrentGlobalLanguage: Integer;",
            "\t\tWizardTxt: label '${3:Text in Assited Setup List}';",
            "\tbegin",
            "\t\tCurrentGlobalLanguage := GlobalLanguage();",
            "\t\tAssistedSetup.Add(GetAppId(), GetPageId(), WizardTxt, \"Assisted Setup Group\"::Extensions);",
            "\t\tGLOBALLANGUAGE(1033);",
            "\t\tAssistedSetup.AddTranslation(GetAppId(), GetPageId(), 1033, WizardTxt);",
            "",
            "\t\t\tUpdateStatus();",
            "\tend;",
            "",
            "\t//TODO: remove the following subscriber if not necessary to run",
            "\t[EventSubscriber(ObjectType::Codeunit, Codeunit::\"Assisted Setup\", 'OnReRunOfCompletedSetup', '', false, false)]",
            "\tlocal procedure OnReRunOfCompletedSetup(ExtensionId: Guid; PageID: Integer; var IsHandled: Boolean)",
            "\tvar",
            "\t\tSetupAlreadyDoneQst: Label 'This setup is already done. Do you want to open the setup page instead?';",
            "\tbegin",
            "\t\tif ExtensionId <> GetAppId() then exit;",
            "\t\tif PageID <> GetPageId() then exit;",
            "",
            "\t\tif Confirm(SetupAlreadyDoneQst, true) then",
            "\t\t\tPage.Run(GetPageId()); //TODO: Might have to be be a different page (like not the wizard, but the setup page instead)",
            "",
            "\t\tIsHandled := true;",
            "\tend;",
            "",
            "\t//TODO: remov the following subscriber if not necessary to run ",
            "\t[EventSubscriber(ObjectType::Codeunit, Codeunit::\"Assisted Setup\", 'OnAfterRun', '', false, false)]",
            "\tlocal procedure OnAfterRunOfSetup(ExtensionID: Guid; PageID: Integer)",
            "\tbegin",
            "\t\tif ExtensionId <> GetAppId() then exit;",
            "\t\tif PageID <> GetPageId() then exit;",
            "",
            "\t\t//TODO: put code here to run 'OnAfterRun' ",
            "\tend;",
            "",
            "\tprocedure UpdateStatus()",
            "\tvar",
            "\t\tRec: Record \"Just Some Table\";",
            "\t\tAssistedSetup: Codeunit \"Assisted Setup\";",
            "\tbegin",
            "\t\tif not Rec.Get() then exit;",
            "",
            "\t\tif Rec.Description.ToLower().EndsWith('waldo.be') then  //TODO: You probably are going to want to change this ;-)",
            "\t\t\tAssistedSetup.Complete(GetAppId(), GetPageId());",
            "\tend;",
            "",
            "\tlocal procedure GetAppId(): Guid",
            "\tvar",
            "\t\tEmptyGuid: Guid;",
            "\t\tInfo: ModuleInfo;",
            "\tbegin",
            "\t\tif Info.Id() = EmptyGuid then",
            "\t\t\tNavApp.GetCurrentModuleInfo(Info);",
            "\t\texit(Info.Id());",
            "\tend;",
            "",
            "\tlocal procedure GetPageId(): Integer",
            "\tbegin",
            "\t\texit(page::\"${4:Your Wizard}\");",
            "\tend;",
            "",
            "\t//TODO: Call \"SomeAssistedSetup.UpdateStatus(); in case the wizard is run without the assisted setup.  It should call the \"UpdateStatus\" of this codeunit.",
            "}",
            ""
        ]
    },
    "Snippet (waldo): Enable Assisted Setup (>=18.0) ": {
        "description": "Snippet (waldo): Enable Assisted Setup (>=18.0)",
        "prefix": "tassistedsetupwaldo",
        "body": [
            "codeunit ${1:id} \"${2:Object Name}\"",
            "{",
            "\t[EventSubscriber(ObjectType::Codeunit, Codeunit::\"Guided Experience\", 'OnRegisterAssistedSetup', '', false, false)]",
            "\tlocal procedure AddExtensionAssistedSetup_OnRegisterAssistedSetup()",
            "\tvar",
            "\t\tGuidedExperience: Codeunit \"Guided Experience\";",
            "\t\tTitleLbl: Label '${3:Assited Setup Title}';",
            "\t\tShortTitleLbl: Label '${4:Assited Setup Short Title}';",
            "\t\tDescriptionLbl: Label '${5:Assited Setup Description}';",
            "\tbegin",
            "\t\tGuidedExperience.InsertAssistedSetup(",
            "\t\t\tTitleLbl,",
            "\t\t\tShortTitleLbl,",
            "\t\t\tDescriptionLbl,",
            "\t\t\t${6:Duration in Minutes},",
            "\t\t\tObjectType::Page,",
            "\t\t\tGetPageId(),",
            "\t\t\t\"Assisted Setup Group\"::Extensions,",
            "\t\t\t'https://www.youtube.com/embed/fitTMAwHcJw',",
            "\t\t\t\"Video Category\"::Uncategorized,",
            "\t\t\t'https://www.waldo.be');",
            "",
            "\t\tUpdateStatus();",
            "\tend;",
            "",
            "\t//TODO: remove the following subscriber if not necessary to run",
            "\t[EventSubscriber(ObjectType::Codeunit, Codeunit::\"Guided Experience\", 'OnReRunOfCompletedAssistedSetup', '', false, false)]",
            "\tlocal procedure OnReRunOfCompletedSetup(ExtensionID: Guid; ObjectType: ObjectType; ObjectID: Integer; var Handled: Boolean)",
            "\tvar",
            "\t\tSetupAlreadyDoneQst: Label 'This setup is already done. Do you want to open the setup page instead?';",
            "\tbegin",
            "\t\tif ExtensionID <> GetAppId() then exit;",
            "\t\tif ObjectType <> ObjectType::Page then exit;",
            "\t\tif ObjectID <> GetPageId() then exit;",
            "",
            "\t\tif Confirm(SetupAlreadyDoneQst, true) then",
            "\t\t\tPage.Run(GetPageId()); //TODO: Might have to be be a different page (like not the wizard, but the setup page instead)",
            "",
            "\t\tHandled := true;",
            "\tend;",
            "",
            "\t//TODO: remove the following subscriber if not necessary to run ",
            "\t[EventSubscriber(ObjectType::Codeunit, Codeunit::\"Guided Experience\", 'OnAfterRunAssistedSetup', '', false, false)]",
            "\tlocal procedure OnAfterRunOfSetup(ExtensionID: Guid; ObjectType: ObjectType; ObjectID: Integer)",
            "\tbegin",
            "\t\tif ExtensionID <> GetAppId() then exit;",
            "\t\tif ObjectID <> GetPageId() then exit;",
            "",
            "\t\t//TODO: put code here to run 'OnAfterRunAssistedSetup' ",
            "\tend;",
            "",
            "\tprocedure UpdateStatus()",
            "\tvar",
            "\t\tRec: Record \"${8:Just Some Table}\";",
            "\t\tGuidedExperience: Codeunit \"Guided Experience\";",
            "\tbegin",
            "\t\tif not Rec.Get() then exit;",
            "",
            "\t\tif Rec.Description.ToLower().EndsWith('waldo.be') then  //TODO: You probably are going to want to change this ;-)",
            "\t\t\tGuidedExperience.CompleteAssistedSetup(ObjectType::Page, GetPageId());",
            "\tend;",
            "",
            "\tlocal procedure GetAppId(): Guid",
            "\tvar",
            "\t\tEmptyGuid: Guid;",
            "\t\tInfo: ModuleInfo;",
            "\tbegin",
            "\t\tif Info.Id() = EmptyGuid then",
            "\t\t\tNavApp.GetCurrentModuleInfo(Info);",
            "\t\texit(Info.Id());",
            "\tend;",
            "",
            "\tlocal procedure GetPageId(): Integer",
            "\tbegin",
            "\t\texit(Page::\"${7:Your Wizard}\");",
            "\tend;",
            "",
            "\t//TODO: Call \"SomeAssistedSetup.UpdateStatus(); in case the wizard is run without the assisted setup.  It should call the \"UpdateStatus\" of this codeunit.",
            "}",
            ""
        ]
    }
}